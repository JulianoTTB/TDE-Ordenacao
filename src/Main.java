public class Main {
    public static void main(String[] args) {
        int[] vetor1 = {12, 18, 9, 25, 17, 31, 22, 27, 16, 13, 19, 23, 20, 30, 14, 11, 15, 24, 26, 28};
        int[] vetor2 = {5, 7, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32};
        int[] vetor3 = {99, 85, 73, 60, 50, 40, 35, 30, 25, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6};
        int tamanhoDosVetores = 20;


        System.out.println("***** Bubble Sort com flag *****");
        System.out.print("Vetor 1: ");
        imprimirVetor(vetor1, tamanhoDosVetores);
        System.out.print("Vetor 1 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.bubbleSortComFlag(vetor1, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        System.out.print("Vetor 2: ");
        imprimirVetor(vetor2, tamanhoDosVetores);
        System.out.print("Vetor 2 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.bubbleSortComFlag(vetor2, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        System.out.print("Vetor 3: ");
        imprimirVetor(vetor3, tamanhoDosVetores);
        System.out.print("Vetor 3 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.bubbleSortComFlag(vetor3, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println("---------------------------------------------------");
        System.out.println();
        vetor1 = new int[]{12, 18, 9, 25, 17, 31, 22, 27, 16, 13, 19, 23, 20, 30, 14, 11, 15, 24, 26, 28};
        System.out.println("***** Selection Sort *****");
        System.out.print("Vetor 1: ");
        imprimirVetor(vetor1, tamanhoDosVetores);
        System.out.print("Vetor 1 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.selectionSort(vetor1, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor2 = new int[]{5, 7, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32};
        System.out.print("Vetor 2: ");
        imprimirVetor(vetor2, tamanhoDosVetores);
        System.out.print("Vetor 2 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.selectionSort(vetor2, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor3 = new int[]{99, 85, 73, 60, 50, 40, 35, 30, 25, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6};
        System.out.print("Vetor 3: ");
        imprimirVetor(vetor3, tamanhoDosVetores);
        System.out.print("Vetor 3 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.selectionSort(vetor3, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println("---------------------------------------------------");
        System.out.println();
        vetor1 = new int[]{12, 18, 9, 25, 17, 31, 22, 27, 16, 13, 19, 23, 20, 30, 14, 11, 15, 24, 26, 28};
        System.out.println("***** Cocktail Sort *****");
        System.out.print("Vetor 1: ");
        imprimirVetor(vetor1, tamanhoDosVetores);
        System.out.print("Vetor 1 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.cocktailSort(vetor1, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor2 = new int[]{5, 7, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32};
        imprimirVetor(vetor2, tamanhoDosVetores);
        System.out.print("Vetor 2 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.cocktailSort(vetor2, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor3 = new int[]{99, 85, 73, 60, 50, 40, 35, 30, 25, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6};
        System.out.print("Vetor 3: ");
        imprimirVetor(vetor3, tamanhoDosVetores);
        System.out.print("Vetor 3 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.cocktailSort(vetor3, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println("---------------------------------------------------");
        vetor1 = new int[]{12, 18, 9, 25, 17, 31, 22, 27, 16, 13, 19, 23, 20, 30, 14, 11, 15, 24, 26, 28};
        System.out.println();
        System.out.println("***** Bucket Sort *****");
        System.out.print("Vetor 1: ");
        imprimirVetor(vetor1, tamanhoDosVetores);
        System.out.print("Vetor 1 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.bucketSort(vetor1, tamanhoDosVetores, 9, 31), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor2 = new int[]{5, 7, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32};
        System.out.print("Vetor 2: ");
        imprimirVetor(vetor2, tamanhoDosVetores);
        System.out.print("Vetor 2 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.bucketSort(vetor2, tamanhoDosVetores, 5, 32), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor3 = new int[]{99, 85, 73, 60, 50, 40, 35, 30, 25, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6};
        System.out.print("Vetor 3: ");
        imprimirVetor(vetor3, tamanhoDosVetores);
        System.out.print("Vetor 3 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.bucketSort(vetor3, tamanhoDosVetores,6,99), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println("---------------------------------------------------");
        vetor1 = new int[]{12, 18, 9, 25, 17, 31, 22, 27, 16, 13, 19, 23, 20, 30, 14, 11, 15, 24, 26, 28};
        System.out.println();
        System.out.println("***** Gnome Sort *****");
        System.out.print("Vetor 1: ");
        imprimirVetor(vetor1, tamanhoDosVetores);
        System.out.print("Vetor 1 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.gnomeSort(vetor1, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor2 = new int[]{5, 7, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32};
        System.out.print("Vetor 2: ");
        imprimirVetor(vetor2, tamanhoDosVetores);
        System.out.print("Vetor 2 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.gnomeSort(vetor2, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor3 = new int[]{99, 85, 73, 60, 50, 40, 35, 30, 25, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6};
        System.out.print("Vetor 3: ");
        imprimirVetor(vetor3, tamanhoDosVetores);
        System.out.print("Vetor 3 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.gnomeSort(vetor3, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println("---------------------------------------------------");
        vetor1 = new int[]{12, 18, 9, 25, 17, 31, 22, 27, 16, 13, 19, 23, 20, 30, 14, 11, 15, 24, 26, 28};
        System.out.println();
        System.out.println("***** Comb Sort  *****");
        System.out.print("Vetor 1: ");
        imprimirVetor(vetor1, tamanhoDosVetores);
        System.out.print("Vetor 1 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.combSort(vetor1, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor2 = new int[]{5, 7, 9, 10, 12, 14, 15, 17, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32};
        System.out.print("Vetor 2: ");
        imprimirVetor(vetor2, tamanhoDosVetores);
        System.out.print("Vetor 2 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.combSort(vetor2, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println();
        vetor3 = new int[]{99, 85, 73, 60, 50, 40, 35, 30, 25, 20, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6};
        System.out.print("Vetor 3: ");
        imprimirVetor(vetor3, tamanhoDosVetores);
        System.out.print("Vetor 3 depois da ordenação: ");
        imprimirVetor(AlgoritmosOrdenacao.combSort(vetor3, tamanhoDosVetores), tamanhoDosVetores);
        System.out.println("Quantidade de trocas: " + AlgoritmosOrdenacao.getQtdTrocas());
        System.out.println("Quantidade de interações: " + AlgoritmosOrdenacao.getQtdInteracoes());
        System.out.println("---------------------------------------------------");
    }
    private static void imprimirVetor(int[] vetor, int tamanhoDoVetor){
        for(int i = 0; i < tamanhoDoVetor; i++){
            System.out.print(vetor[i] + " ");
        }
        System.out.println();
    }
}


